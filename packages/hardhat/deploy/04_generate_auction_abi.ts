import { DeployFunction } from "hardhat-deploy/types";
import * as fs from "fs";
import * as path from "path";
import prettier from "prettier";

const generatedContractComment = `
/**
 * This file is autogenerated by the auction ABI generation script.
 * You should not edit it manually or your changes might be overwritten.
 */
`;

const generateAuctionAbi: DeployFunction = async function () {
  console.log("üîÑ Generating auction ABI file...");

  const ARTIFACTS_DIR = "./artifacts/contracts";
  const TARGET_DIR = "../nextjs/contracts/";
  const AUCTION_ARTIFACT_PATH = path.join(ARTIFACTS_DIR, "Auction.sol", "Auction.json");
  const TARGET_FILE_PATH = path.join(TARGET_DIR, "auctionAbi.ts");

  try {
    // Check if the auction artifact exists
    if (!fs.existsSync(AUCTION_ARTIFACT_PATH)) {
      console.error("‚ùå Auction artifact not found. Please compile contracts first.");
      return;
    }

    // Read the auction artifact
    const auctionArtifact = JSON.parse(fs.readFileSync(AUCTION_ARTIFACT_PATH, "utf8"));

    if (!auctionArtifact.abi) {
      console.error("‚ùå No ABI found in the auction artifact.");
      return;
    }

    // Ensure target directory exists
    if (!fs.existsSync(TARGET_DIR)) {
      fs.mkdirSync(TARGET_DIR, { recursive: true });
    }

    // Generate the TypeScript content
    const abiString = JSON.stringify(auctionArtifact.abi, null, 2);
    const fileContent = `${generatedContractComment}

export const auctionAbi = ${abiString} as const;
`;

    // Format the content with prettier
    const formattedContent = await prettier.format(fileContent, {
      parser: "typescript",
      semi: true,
      singleQuote: false,
      trailingComma: "all",
      printWidth: 120,
    });

    // Write the file
    fs.writeFileSync(TARGET_FILE_PATH, formattedContent);

    console.log(`‚úÖ Generated auction ABI file at ${TARGET_FILE_PATH}`);
    console.log(`üìä ABI contains ${auctionArtifact.abi.length} function/event definitions`);
  } catch (error) {
    console.error("‚ùå Error generating auction ABI:", error);
    throw error;
  }
};

export default generateAuctionAbi;
generateAuctionAbi.tags = ["GenerateAuctionAbi"];
generateAuctionAbi.dependencies = ["AuctionFactory"];
